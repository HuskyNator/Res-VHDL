$schema: https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: Adrian Syntax Notation
scopeName: source.asn
patterns:
    - include: "#group_round"
    - include: "#group_square"
    - include: "#placeholder"
    - include: "#text"
repository:
    text:
        name: string.unquoted
        match: &text ([^@\s\[\]\(\)\\]|\\\[|\\\]|\\\(|\\\)|\\\@|\\\\)+

    # List key
    listkey_single:
        name: meta.cast.listkey.single
        match: '\^.(#count)?'
    listkey_multi:
        name: meta.cast.listkey.multi
        match: '\^\(*text\)(#count)?'
    # # Count
    # count_single:
    #     name: meta.cast.count.single
    #     match: '[\?|\+|\*]'
    # count_multi:
    #     name: meta.cast.count.multi
    #     match: '[0-9]*\-[0-9]*\*'
    
    # Placeholder
    placeholder:
        name: entity.name.class
        match: '@([\?|\+|\*]|[0-9]*\-[0-9]*\*)?([a-zA-Z_]\w*)'
    
    # Group (& Set)

        # @
        # (                             #1 List
            # (\^)                          #2 Operator
            # (                             #3 Delimiter
                # (.)                           #4 Single
            # |
                # \((                           #5 Multiple
                    # (                             #6 Character
                        # [^@\s\[\]\(\)\\]
                    # |
                        # \\\[
                    # |
                        # \\\]
                    # |
                        # \\\(
                    # |
                        # \\\)
                    # |
                        # \\\@
                    # |
                        # \\\\
                    # )+                            #6 Character
                # )\)                          #5 Multiple
            # )                             #3 Delimiter
        # )?                            #1 List
        # (                             #7 Count
            # [\?|\+|\*]
        # |
            # [0-9]*\-[0-9]*\*
        # )?                            #7 Count
        # \(

    group_round:
        name: meta.group.bracket.round
        begin: '@((\^)((.)|\((([^@\s\[\]\(\)\\]|\\\[|\\\]|\\\(|\\\)|\\\@|\\\\)+)\)))?([\?|\+|\*]|[0-9]*\-[0-9]*\*)?\('
        end: \)
        beginCaptures:
            "0":
                name: bracket.open.round
            "1":
                name: meta.list
            "2":
                name: keyword.operator.list
            "3":
                name: keyword.operator.delimiter
            "4":
                name: string.other
            "5":
                name: string.other
            # "6":
            #     name: string.other
            "7":
                name: keyword.operator.count
        endCaptures:
            "0":
                name: bracket.close
        patterns:
            - name: keyword.operator.or
              match: '\|' # match 'or' for set
            - include: $self
    group_square:    
        name: meta.group.bracket.square
        begin: '@((\^)((.)|\((([^@\s\[\]\(\)\\]|\\\[|\\\]|\\\(|\\\)|\\\@|\\\\)+)\)))?([\?|\+|\*]|[0-9]*\-[0-9]*\*)?\['
        end: \]
        beginCaptures:
            "0":
                name: bracket.open.round
            "1":
                name: meta.list
            "2":
                name: keyword.operator.list
            "3":
                name: keyword.operator.delimiter
            "4":
                name: string.other
            "5":
                name: string.other
            # "6":
            #     name: string.other
            "7":
                name: keyword.operator.count
        endCaptures:
            "0":
                name: bracket.open
        patterns:
            - name: keyword.operator.or
              match: '\|' # match 'or' for set
            - include: $self
